// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using Coherence.ProtocolDef;
	using Coherence.Serializer;
	using Coherence.Brook;
	using UnityEngine;

	public struct Roots : IEntityInput
	{
		public uint GetComponentType() => Definition.InternalRoots;

		private readonly bool isRemoteInput;

		public Roots
		(
			bool isRemoteInput
		)
		{
			this.isRemoteInput = isRemoteInput;
		}

		public override string ToString()
		{
			return isRemoteInput
				? $""
				: $"";
		}

		public static void Serialize(Roots inputData, IOutProtocolBitStream bitStream)
		{
		}

		public static Roots Deserialize(IInProtocolBitStream bitStream)
		{

			return new Roots
			(
				true
			);
		}
	}
}
